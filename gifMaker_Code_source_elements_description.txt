GifMaker_v0.8.1 
------------------
manager.php

  The Html control display panel.
   - The 'manager.php' that creates the HTML document.It checks whether  was it saved before it is loading
     or not ( ' isEmpty.php' ).
      -If yes, then the "<body>" tag "onload" event calls the "projectLoad()" JavaScript function.
      -If not, it calls the "newGif()" JavaScript function in the '<body> tag 'onload' event.
      It is possible loaded maximum 5 images  by 'picsUpload.php' from the "GIFproject/images" directory.
---------
manager.js
	It manages Html inputs, sends datas to the server, and receives datas from the server.
		When loading, initialize the status variables:
	var sectionNumber = -1; // variable not used in this version of the program
	var load = 0; // Indicates whether it after saving loading or not
	var kepSorSam = 0;// Indicates how many images the Gif consists of. (Number of layers.)
	var picture1 = ""; // Data strings for each image.
	var picture2 = "";
	var picture3 = "";
	var picture4 = "";
	var picture5 = "";
	var dataString = ""; // Data string of all images (Query-string)
	The all datas of a maximum 5 pictures is stored in the 'picturesData[5][21]' array.
	var pictImprove = "0"; // These 3 variables indicate the states of improve.
	var beforeImprove = "0";
	var improveTurnOn = "0";
	var firstLoad = "1";// Indicates that there is no image in the Gif yet.
Functions:
	function sectionShow()//functions not used in this version of the program.
	function sectionHide()//functions not used in this version of the program.
	function textImgSrc(in)//Occurs when an image is clicked, sends the name of the image.
	function picturesImprove()// Event handler for the 'improve' switch.
	function switchPict(pictureNum, projectLoad, kikapcsolas)//The event handler for image buttons that appears when the 'improve' button is clicked .
	function projectData(save)//Pass the inputs of the panels to the 'picturesData[5][21]' array and a string creates from them.
	function pictureSave()//function not used in this version of the program.
	function saveProj()// The event handler of the "SAVE" button. Each image data string will be saved to files named "'image number'pict.txt" by calling '"gifProject.php?" + dataString'  to the "htdocs/php_1/gifmaker/ directory.
	function showGif2()//Event handler for the 'SHOW' button. It creates an animated gif by calling'"gifProject.php?"+dataString'.
			And it saves  as "https://localhost/php_1/gifmaker/GIFproject/Gif/animation.gif"; then displays the animated Gif by filled to in "canvas".
	function fillCanvas()// Displays the appropriate images in the "canvas" at various events.
		// According to the input data, the '"range.php?" + dataString' with XMLHttpRequest() traffic.
	function alertShow_Save() //Warning in case of incorrect inputs.
	function sectionStShow()//'ShowStart' button event handler.
		sectionEndShow()//'ShowEnd' button event handler.
	function newGif()// Called during the document <body onload="newGif()"> event, if not after saving the page loads.
	function projectLoad() // Called on document <body onload="projectLoad()"> event when after saving the page is loaded.
--------
manager.css
  Styles the Html page.
   The main block <div class="articles">// is grid and gives two columns of equal width.
One column <div class="col1Articles"> which 'grid-auto-rows: minmax(min-content, max-content);'
this is where the main input panels are placed, which are 'style=" position: fixed;', (by inline style).
The other column is <div class="col3Articles"> which is 'grid-auto-rows: minmax(min-content, max-content);'
this is where the 'canvas' and the uploaded maximum of 5 images are placed.
The <div> below this is for 'canvas' style="position: fixed;
----------
.PHPs
	isEmpty.php //Check the "GIFproject/" directory. Returns "0" if saved, "1" if not.
	projectLoad.php // If a save has been made, it returns a string created from the data of the '.txt' files.
	picsUpload.php // Uploads and displays a maximum 5 images from the "GIFproject/images" directory.
	gifProject.php // According to the 'save' value of the received string:
		value="0": run value="1": 'makeGif' function of 'imagickManager' class in 'gifMaker.php'.
		value="1": saves project data into $_SERVER['DOCUMENT_ROOT'] . '/php_1/gifmaker/GIFproject/'directory, 'picture number' pict.txt files.
		value="2": not used in this program.
	range.php // expands the received Query string into a pair of key-value arrays and runs the function 'makeRangeShow($rangeDatArray)' of class 'imagickManager' in 'gifMaker.php'.
	imgGifPlan.php // expands the received Query string into a pair of key-value arrays and returns this.
	gifMaker.php // 'imagickManager{' class.
		function makeRangeShow($pictRangeDatas){ // The appropriate one from the received string on a white background call the 'getPhpImg' function of 'phpToHtml.php' sending '.png' with position, opacity and lightness.
		function canvasWhite() // call the 'getPhpImg' function of 'phpToHtml.php' sending a white '.png' according to size of'canvas'.
		function getPictures($thePicture )// It received a name of some picture and creates image object from a file according to the name of the  picture.
			Returns an 'Imagick' object as a '.png' image.
		function makeGif($pictureArray)// Builds the animated Gif from the received image data array.
			// The layer sequences is creating by calling the function makeCopiedPNG($imgData2, $nullE) . Then the animated Gif will be saved
			// to '$_SERVER['DOCUMENT_ROOT'] . '/php_1/gifmaker/GIFproject/Gif/'directory as 'animation.gif'.
	whiteBckgrFill.php // The picsUpload.php calls to fills 'canvas'  white background.  

---------