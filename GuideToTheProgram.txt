manager.php
  The Html control display panel.
   - The 'manager.php' that creates the HTML document checks whether it was done before when it is loaded
     save ( ' isEmpty.php' ).
      -If yes, then the "<body" tag calls the "projectLoad()" JavaScript function during the "onload" event.
      -If not, it calls the "newGif()" JavaScript function in the '<body> tag 'onload' event.
      A maximum of 5 images are loaded by 'picsUpload.php' from the "GIFproject/images" directory.
---------
manager.js
	It manages Html inputs, sends them to the server, and receives data from the server (Ajax).
	When loading, initialize the status variables:
	var szakaszSzam = -1; // variable not used in this version of the program
	var load = 0; // Indicates whether to load after saving or not
	var kepSorSzam = 0;// Indicates how many images the Gif consists of. (Number of layers.)
	var picture1 = ""; // Data strings for each image.
	var picture2 = "";
	var picture3 = "";
	var picture4 = "";
	var picture5 = "";
	var dataString = ""; // Data string of all images (Query-string)
	The data of a maximum of 5 pictures is stored in the 'picturesData[5][21]' array.
	var pictImprove = "0"; // These 3 variables indicate the states of improve.
	var beforeImprove = "0";
	var improveTurnOn = "0";
	var firstLoad = "1";// Indicates that there is no image in the Gif yet.
Functions:
	function szakaszShow()//functions not used in this version of the program.
	function szakaszHide()//functions not used in this version of the program.
	function textImgSrc(in)//Occurs when an image is clicked, passes the name of the image.
	function picturesImprove()// Event handler for the 'improve' switch.
	function switchPict(pictureNum, projectLoad, kikapcsolas)//The event handler for image buttons that 		//appears when the 'improve' button is clicked .
	function projectData(save)//Pass the inputs of the panels to the 'picturesData[5][21]' array and a string
	// creates from them.
	function pictureSave()//function not used in this version of the program.
	function saveProj()// The event handler of the "SAVE" button, each image data string is "'image 			//number'pict.txt" redirects to files '"gifProject.php?" + dataString' by calling XMLHttpRequest() saved 		//to the "htdocs/php_1/gifmaker/ directory.
	function showGif2()//Event handler for the 'SHOW' button. Directs to create an animated Gif 
	// '"gifProject.php?" + dataString' by calling XMLHttpRequest"https://localhost/php_1/gifmaker/GIFproject/Gif/animation.gif"; displays a Gif filled to
 in "canvas".
	function fillCanvas()// Displays the appropriate images in the "canvas" at various events.
		// According to the input data, the '"range.php?" + dataString' with XMLHttpRequest() traffic.
	function alertShow_Save() //Warning in case of incorrect inputs.
	function szakaszStShow()//'ShowStart' button event handler.
		szakaszEndShow()//'ShowEnd' button event handler.
	function newGif()// Called during the document <body onload="newGif()"> event, if not after saving
		// the page loads.
	function projectLoad() // Called on document <body onload="projectLoad()"> event when saving
		// after the page is loaded.
--------
manager.css
  Styles the Html page.
   The main block <div class="articles">// is grid and gives two columns of equal width.
One column <div class="col1Articles"> which 'grid-auto-rows: minmax(min-content, max-content);'
this is where the main input panels are placed, which are 'style=" position: fixed;', (by inline style).
The other column is <div class="col3Articles"> which is 'grid-auto-rows: minmax(min-content, max-content);'
this is where the 'canvas' and the uploaded maximum of 5 images are placed.
The <div> below this is for 'canvas' style="position: fixed;
----------
.PHPs
	isEmpty.php //Check the "GIFproject/" directory. Returns "0" if saved, "1" if not.
	whiteBckgrFill.php// Called by the newGif() JS function to fill the canvas with white.
	projectLoad.php // If a save has been made, it returns a string created from the data of the '.txt' files.
	picsUpload.php // Uploads a maximum of 5 images from the "GIFproject/images" directory.
	gifProject.php // According to the 'save' value of the received string:
		value="0": run value="1": 'makeGif' function of 'imagickManager' class 'gifMaker.php'.
		value="1": saves project data $_SERVER['DOCUMENT_ROOT'] . '/php_1/gifmaker/GIFproject/'
		directory, 'picture number' pict.txt files.
		value="2": not used in this program.
	range.php // expands the received Query string into a pair of key-value arrays and runs the
		//function 'makeRangeShow($rangeDatArray)' of class 'imagickManager' of 'gifMaker.php'.
	imgGifPlan.php// expands the received Query string into a pair of key-value arrays and returns this.
	gifMaker.php // 'imagickManager{' class.
		function makeRangeShow($pictRangeDatas){ // The appropriate picture from the received string on a 	
		   white background call the 'getPhpImg' function of 'phpToHtml.php' passing '.png' with position, 
		   opacity and lightness.				
		function getPictures($thePicture)//Created from a file corresponding to the name of the received picture
			Returns an 'Imagick' object as a '.png' image.
		function makeGif($pictureArray)// Builds the animated Gif from the received image data array.
			// The layer sequences corresponding to each image are a
		     function makeCopiedPNG($imgData2, $nullE) creates it. Then the animated Gif
			//save to '$_SERVER['DOCUMENT_ROOT'] . '/php_1/gifmaker/GIFproject/Gif/'
			directory as 'animation.gif'.
---------
----------
Operation
  A maximum of 5  image can be placed in the "htdocs/php_1/gifmaker/GIFproject/images/" directory. maximum 400px   wide, 220px high with ".png" extension.
  When the page loads, these images appear on the page. By clicking on an image, it appears in the "canvas".
  The name, height and width of the image will then appear on the blue panel.
  At the top of the blue panel of the "canvas", you must set the length of the animation to be created in seconds,   as well as how much animation length, that is, the number of images to run in 1 second (delay). It calculated      from these data number of frames appears in the field next to the input fields. This means how much the entire   animation is consists of an image (frame).
On the dark panel, you can set the start and end (last) of the animation of the image loaded into the "canvas"
  x, y values ​​(displacement); start and end transparency (opacity) from 1 to 10; the clarity of the start and end
  From 0-200. The start and end images can be viewed with the ShowStart, ShowEnd buttons.
  If all these values ​​are set, the "Show" button can be used to create the animation, which is what makes up the   animation depending on the number and size of images, it takes 10-60 seconds, then it runs the animation in the   "canvas".
  You can click on one of the images again and set x,y in the same way; opacity; lightness values.
  Next to the image title, the image number is displayed, meaning that this is the 2nd image in the animation.   This image is above the first one appears, about layer 2.
   In this way, the animation can consist of a total of 5 images.
   By clicking on the "improve" button, a panel will appear on which buttons according to the number of images       entered up to that point will appear with the number of the given image, and the "Show", "Save" buttons and the    images that can be entered disappear.
     By clicking on the button of an image entered so far, the given image appears in the "canvas" and on the    panels
   data. These can be modified and the start and end images can be viewed with the ShowStart and ShowEnd buttons.
By clicking on the "improve" button, the "Show", "SAVE" buttons and the selectable images, the previous images
   and its buttons disappear.
   You can view the modified animation with the "Show" button and save it with the "SAVE" button.
   After saving, you can continue editing the animation with the saved images and data when the page is reloaded.
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
Using the Xampp server, the location of the files: 
 Put into 'c:\xampp\htdocs\php_1\gifmaker\' directory all '.php' files:
 projectLoad.php
 picsUpload.php
 phpToHtml.php
 manager.php
 isEmpty.php
imgGifPlan.php
gifProject.php
gifMaker.php
whiteBckgrFill.php
  the JavaScript file:
manager.js
  the CSS file:
manager.css
----------
Create these directories:
'c:\xampp\htdocs\php_1\gifmaker\GIFproject\Gif' (The location of the animated gif)
'c:\xampp\htdocs\php_1\gifmaker\GIFproject\images' (Space for a maximum of 5 pictures)
----------------------
The maximum of 5 picture into:'c:\xampp\htdocs\php_1\gifmaker\images\' directory.
--
Currently, the animated gif can be copied from the menu that opens when you 
right-click on the gif with the 'save image' menu item.
--
To the address bar of the browser: 'localhost/php_1/gifmaker/manager.php'
(without quotes).
--------------------------
The program uses PHP's 'imagick' library, if it is not installed among the PHP extensions, then
the 'imagick' extension must be installed.













